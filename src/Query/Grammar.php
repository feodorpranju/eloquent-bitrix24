<?php

namespace Pranju\Bitrix24\Query;

use Illuminate\Database\Query\Builder;
use Illuminate\Database\Query\Grammars\Grammar as BaseGrammar;
use Pranju\Bitrix24\Bitrix24Exception;
use Pranju\Bitrix24\Contracts\Command;
use Pranju\Bitrix24\Contracts\Repositories\CanCreateItem;
use Pranju\Bitrix24\Contracts\Repositories\CanGetItem;
use Pranju\Bitrix24\Contracts\Repositories\CanUpdateItem;

class Grammar extends BaseGrammar
{
    /**
     * @inheritDoc
     * @return Command
     * @throws Bitrix24Exception
     */
    public function compileInsertGetId(Builder $query, $values, $sequence): Command
    {
        $repository = $query->getConnection()->getRepository($query->from);

        if ($repository instanceof CanCreateItem) {
            return $repository->makeCreateCommand($values);
        }

        throw new Bitrix24Exception($query->from.' has no create action');
    }

    /**
     * @inheritDoc
     * @return Command
     * @throws Bitrix24Exception
     */
    public function compileUpdate(Builder $query, array $values): Command
    {
        $repository = $query->getConnection()->getRepository($query->from);

        $id = $query->getIdFromWheres();

        if (is_null($id)) {
            //TODO: add batch update selected ids instead
            throw new Bitrix24Exception('ID is not set in update query');
        }

        if ($repository instanceof CanUpdateItem) {
            return $repository->makeUpdateCommand($id, $values);
        }

        throw new Bitrix24Exception($query->from.' has no update action');
    }

    public function compileDelete(Builder $query)
    {
        return parent::compileDelete($query); // TODO: Change the autogenerated stub
    }

    public function compileExists(Builder $query)
    {
        return parent::compileExists($query); // TODO: Change the autogenerated stub
    }

    public function compileInsert(Builder $query, array $values)
    {
        return parent::compileInsert($query, $values); // TODO: Change the autogenerated stub
    }

    public function compileInsertOrIgnore(Builder $query, array $values)
    {
        parent::compileInsertOrIgnore($query, $values); // TODO: Change the autogenerated stub
    }

    public function compileSelect(Builder $query): Command
    {

    }

    /**
     * @inheritDoc
     * @return array
     */
    public function compileWheres(Builder $query): array
    {
        dd($query->wheres);
    }

    /**
     * Compiles find by ID query
     *
     * @param Builder $query
     * @param string|int $id
     * @return Command
     * @throws Bitrix24Exception
     */
    public function compileFind(Builder $query, string|int $id): Command
    {
        $repository = $query->getConnection()->getRepository($query->from);

        if ($repository instanceof CanGetItem) {
            return $repository->makeGetCommand($id);
        }

        throw new Bitrix24Exception($query->from.' has no get action');
    }
}
